# # .github/workflows/hello.yml
# name: Hello CI
#
# on: [push, workflow_dispatch]
#
# jobs:
#   hello:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "GitHub Actions is working âœ…"


name: Deploy Frontend to Azure Static Web Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20 (matches Vite/React Router requirements)
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: npm run build

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "upload"
          app_location: frontend
          app_artifact_location: dist
          skip_app_build: true



# name: Azure Static Web Apps CI/CD
#
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened, closed]
#     branches:
#       - main
#
# jobs:
#   build_and_deploy_job:
#     if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
#     runs-on: ubuntu-latest
#     name: Build and Deploy Job
#     permissions:
#        id-token: write
#        contents: read
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: true
#           lfs: false
#       - name: Install OIDC Client from Core Package
#         run: npm install @actions/core@1.6.0 @actions/http-client
#       - name: Get Id Token
#         uses: actions/github-script@v6
#         id: idtoken
#         with:
#            script: |
#                const coredemo = require('@actions/core')
#                return await coredemo.getIDToken()
#            result-encoding: string
#       - name: Build And Deploy
#         id: builddeploy
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_POLITE_DUNE_07C418700 }}
#           action: "upload"
#           ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
#           # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
#           app_location: "./frontend" # App source code path
#           api_location: "" # Api source code path - optional
#           output_location: "build" # Built app content directory - optional
#           github_id_token: ${{ steps.idtoken.outputs.result }}
#           ###### End of Repository/Build Configurations ######
#
#   close_pull_request_job:
#     if: github.event_name == 'pull_request' && github.event.action == 'closed'
#     runs-on: ubuntu-latest
#     name: Close Pull Request Job
#     steps:
#       - name: Close Pull Request
#         id: closepullrequest
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           action: "close"
